{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","name","src","process","images","id","onClick","shufflePics","Wrapper","children","Title","total","message","App","state","friends","clickedPics","score","goal","_this","includes","setState","push","length","i","j","Math","floor","random","_ref","_this2","this","components_Wrapper","components_Title","map","components_Card","key","image","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"k7BAUeA,SAPF,SAAAC,GAAK,OACdC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKC,cAAyBR,EAAMS,OAAQC,GAAIV,EAAMU,GAAKC,QAAW,kBAAMX,EAAMY,YAAYZ,EAAMU,KAAKN,UAAU,gBADzI,eCCWS,EAFC,SAAAb,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMc,iBCU1CC,MAVf,SAAef,GACX,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACtBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,2BACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,wEACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,eAAmCJ,EAAMgB,OACrCf,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAWJ,EAAMiB,WCyExBC,6MA5DbC,MAAQ,CACNC,UACAC,YAAa,GACbC,MAAO,EACPC,KAAM,GACNN,QAAS,MAGXL,YAAc,SAAAF,GACZ,IAAIW,EAAcG,EAAKL,MAAME,YAE7B,GAAIA,EAAYI,SAASf,GACvBc,EAAKE,SAAS,CAAEL,YAAa,GAAIC,MAAO,EAAGL,QAAS,mBAKlD,GAFAI,EAAYM,KAAKjB,GAEU,KAAvBW,EAAYO,OAAhB,CAIAJ,EAAKE,SAAS,CAAEN,UAASC,cAAaC,MAAOD,EAAYO,OAAQX,QAAS,KAE1E,IAAK,IAAIY,EAAIT,EAAQQ,OAAS,EAAGC,EAAI,EAAGA,IAAK,CACzC,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADCK,EAEd,CAACd,EAAQU,GAAIV,EAAQS,IAA/CT,EAAQS,GAFgCK,EAAA,GAE5Bd,EAAQU,GAFoBI,EAAA,SAL3CV,EAAKE,SAAS,CAAEJ,MAAO,GAAIL,QAAS,kDAAmDI,YAAa,8EAanG,IAAAc,EAAAC,KACP,OAEEnC,EAAAC,EAAAC,cAACkC,EAAD,KACApC,EAAAC,EAAAC,cAACmC,EAAD,CACEtB,MAAOoB,KAAKjB,MAAMG,MAClBC,KAAM,GACNN,QAASmB,KAAKjB,MAAMF,UAIjBmB,KAAKjB,MAAMC,QAAQmB,IAAI,SAAAnB,GAAO,OAC7BnB,EAAAC,EAAAC,cAACqC,EAAD,CAAM5B,YAAauB,EAAKvB,YAAaF,GAAIU,EAAQV,GAC5C+B,IAAKrB,EAAQV,GACbgC,MAAOtB,EAAQsB,kBA/CdC,aCblBC,IAASC,OAAO5C,EAAAC,EAAAC,cAAC2C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.99da9e4b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst Card = props => (\n    <div className=\"imgCard\">\n    <img alt={props.name} src={process.env.PUBLIC_URL + props.images} id={props.id}  onClick = {() => props.shufflePics(props.id)} className='shufflePics'/>/>\n\n    </div>\n)\n\nexport default Card;","import React from \"react\";\n// import \"./style.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;","import React from \"react\";\nimport \"./title.css\";\n\nfunction Title(props) {\n    return <div className=\"gameText\">\n    <h1 className=\"title\">The Gilligan Click Game</h1>\n    <h4 className=\"info\"> Try to click on all 12 images without clicking the same image twice</h4>\n    <h3 className=\"score\">Your Score: {props.total}</h3>\n        <h3 className=\"message\">{props.message}</h3>\n        \n    </div>\n}\n\nexport default Title;","import React, { Component } from 'react';\nimport Card from './components/Card';\nimport friends from './friends.json';\nimport Wrapper from './components/Wrapper';\nimport Title from './components/Title';\n\n\n// import Nav from './components/Nav';\n\n\n//Game starts with a score of 0\n//Score increases if image is clicked\n//Score resets if same image is clicked twice\n//Images resuffle after a image is clicked\n//Game restarts if Score is 0\n\n\n\n\nclass App extends Component {\n\n  state = {\n    friends,\n    clickedPics: [],\n    score: 0,\n    goal: 12,\n    message: \"\",\n  };\n\n  shufflePics = id => {\n    let clickedPics = this.state.clickedPics;\n\n    if (clickedPics.includes(id)) {\n      this.setState({ clickedPics: [], score: 0, message: \"You lose!\"});\n      return;\n    } else {\n        clickedPics.push(id)\n\n        if (clickedPics.length === 12){\n          this.setState({ score: 12, message: \"You Win! Click on another picture to play again\", clickedPics: [] })\n          return;\n        }\n        this.setState({ friends, clickedPics, score: clickedPics.length, message: \"\"});\n\n        for (let i = friends.length - 1; i > 0; i--) {\n            let j = Math.floor(Math.random() * (i + 1));\n            [friends[i], friends[j]] = [friends[j], friends[i]];\n        }\n \n      }\n    } \n  \n  render() {\n    return (\n      \n      <Wrapper>\n      <Title \n        total={this.state.score}\n        goal={12}\n        message={this.state.message}\n        >\n      </Title>\n        \n          {this.state.friends.map(friends => (\n            <Card shufflePics={this.shufflePics} id={friends.id}\n                 key={friends.id}\n                 image={friends.image}\n              >\n              </Card>\n            \n          ))}\n        \n          </Wrapper>\n         \n         \n        \n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}